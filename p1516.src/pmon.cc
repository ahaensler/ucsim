#include "pmon.h"

t_mem pmon[]= {
0x00000000, 0x01f20001, /* 01f20001 //C 00000 jmp	start */
0x00000001, 0x01d20448, /* 01d20448 //C 00001 mvzl	sp,stack_end */
0x00000002, 0x01020001, /* 01020001 //C 00002 mvzl	r0,1 */
0x00000003, 0x01120308, /* 01120308 //C 00003 mvzl	r1,echo */
0x00000004, 0x0c010000, /* 0c010000 //C 00004 st	r0,r1 */
0x00000005, 0x0102ff44, /* 0102ff44 //C 00005 mvzl	r0,UART_CPB */
0x00000006, 0x011200d9, /* 011200d9 //C 00006 mvzl	r1,217 */
0x00000007, 0x0c100000, /* 0c100000 //C 00007 st	r1,r0 */
0x00000008, 0x0102ff41, /* 0102ff41 //C 00008 mvzl	r0,UART_CTRL */
0x00000009, 0x01120003, /* 01120003 //C 00009 mvzl	r1,3 */
0x0000000a, 0x0c100000, /* 0c100000 //C 0000a st	r1,r0 */
0x0000000b, 0x01020309, /* 01020309 //C 0000b mvzl	r0,msg_start */
0x0000000c, 0x0400026e, /* 0400026e //C 0000c call	printsnl */
0x0000000d, 0x0400000f, /* 0400000f //C 0000d call	setup_line */
0x0000000e, 0x01f2001c, /* 01f2001c //C 0000e jmp	main */
0x0000000f, 0x0ded0000, /* 0ded0000 //C 0000f push	lr */
0x00000010, 0x01020301, /* 01020301 //C 00010 mvzl	r0,line_ptr	; lptr= 0 */
0x00000011, 0x01120000, /* 01120000 //C 00011 mvzl	r1,0 */
0x00000012, 0x0c100000, /* 0c100000 //C 00012 st	r1,r0 */
0x00000013, 0x0102029d, /* 0102029d //C 00013 mvzl	r0,line		; line[0]= 0 */
0x00000014, 0x0c100000, /* 0c100000 //C 00014 st	r1,r0 */
0x00000015, 0x01020302, /* 01020302 //C 00015 mvzl	r0,at_eol	; at_eol= 1 */
0x00000016, 0x01120001, /* 01120001 //C 00016 mvzl	r1,1 */
0x00000017, 0x0c100000, /* 0c100000 //C 00017 st	r1,r0 */
0x00000018, 0x01020317, /* 01020317 //C 00018 mvzl	r0,prompt */
0x00000019, 0x0400025a, /* 0400025a //C 00019 call	prints */
0x0000001a, 0x0fed0000, /* 0fed0000 //C 0001a pop	lr */
0x0000001b, 0x00f00e00, /* 00f00e00 //C 0001b ret */
0x0000001c, 0x04000244, /* 04000244 //C 0001c call	check_uart */
0x0000001d, 0x41f20023, /* 41f20023 //C 0001d C0 jmp	no_input */
0x0000001e, 0x0400024c, /* 0400024c //C 0001e call	read */
0x0000001f, 0x04000024, /* 04000024 //C 0001f call	proc_input */
0x00000020, 0x41f20023, /* 41f20023 //C 00020 C0 jmp	no_line */
0x00000021, 0x04000042, /* 04000042 //C 00021 call	proc_line */
0x00000022, 0x0400000f, /* 0400000f //C 00022 call	setup_line */
0x00000023, 0x01f2001c, /* 01f2001c //C 00023 jmp	main */
0x00000024, 0x0ded0000, /* 0ded0000 //C 00024 push	lr */
0x00000025, 0x0108000a, /* 0108000a //C 00025 cmp	r0,LF */
0x00000026, 0x11f2003b, /* 11f2003b //C 00026 EQ jmp	got_eol */
0x00000027, 0x0108000d, /* 0108000d //C 00027 cmp	r0,CR */
0x00000028, 0x11f2003b, /* 11f2003b //C 00028 EQ jmp	got_eol */
0x00000029, 0x01120302, /* 01120302 //C 00029 mvzl	r1,at_eol	; at_aol= 0 */
0x0000002a, 0x01220000, /* 01220000 //C 0002a mvzl	r2,0 */
0x0000002b, 0x0c210000, /* 0c210000 //C 0002b st	r2,r1 */
0x0000002c, 0x01120301, /* 01120301 //C 0002c mvzl	r1,line_ptr	; line[line_ptr]= char */
0x0000002d, 0x0e310000, /* 0e310000 //C 0002d ld	r3,r1 */
0x0000002e, 0x0122029d, /* 0122029d //C 0002e mvzl	r2,line */
0x0000002f, 0x08020300, /* 08020300 //C 0002f st	r0,r2,r3 */
0x00000030, 0x013a0001, /* 013a0001 //C 00030 plus	r3,1		; line_ptr++ */
0x00000031, 0x0c310000, /* 0c310000 //C 00031 st	r3,r1 */
0x00000032, 0x01420000, /* 01420000 //C 00032 mvzl	r4,0 */
0x00000033, 0x09438200, /* 09438200 //C 00033 st	r4,r3+,r2	; line[line_ptr]= 0 */
0x00000034, 0x08430200, /* 08430200 //C 00034 st	r4,r3,r2	; double 0 at end, needed by tokenizer */
0x00000035, 0x01420308, /* 01420308 //C 00035 mvzl	r4,echo		; check if echo is turned on */
0x00000036, 0x0e440000, /* 0e440000 //C 00036 ld	r4,r4 */
0x00000037, 0x024b0000, /* 024b0000 //C 00037 sz	r4 */
0x00000038, 0x2400024f, /* 2400024f //C 00038 NZ call	putchar		; echo */
0x00000039, 0x020d0000, /* 020d0000 //C 00039 clc */
0x0000003a, 0x01f20040, /* 01f20040 //C 0003a jmp	proc_input_ret */
0x0000003b, 0x01120302, /* 01120302 //C 0003b mvzl	r1,at_eol */
0x0000003c, 0x0e110000, /* 0e110000 //C 0003c ld	r1,r1 */
0x0000003d, 0x021b0000, /* 021b0000 //C 0003d sz	r1		; Z=0 at eol -> skip, not ready */
0x0000003e, 0x220d0000, /* 220d0000 //C 0003e Z0 clc */
0x0000003f, 0x120c0000, /* 120c0000 //C 0003f Z1 sec */
0x00000040, 0x0fed0000, /* 0fed0000 //C 00040 pop	lr */
0x00000041, 0x00f00e00, /* 00f00e00 //C 00041 ret */
0x00000042, 0x0ded0000, /* 0ded0000 //C 00042 push	lr */
0x00000043, 0x0102000a, /* 0102000a //C 00043 mvzl	r0,LF */
0x00000044, 0x0400024f, /* 0400024f //C 00044 call	putchar */
0x00000045, 0x0400006b, /* 0400006b //C 00045 call	tokenize */
0x00000046, 0x0400008c, /* 0400008c //C 00046 call	find_cmd */
0x00000047, 0x41f2004a, /* 41f2004a //C 00047 C0 jmp	cmd_not_found */
0x00000048, 0x05000000, /* 05000000 //C 00048 call	r0,0 */
0x00000049, 0x01f2004c, /* 01f2004c //C 00049 jmp	proc_line_ret */
0x0000004a, 0x01020056, /* 01020056 //C 0004a mvzl	r0,snotfound */
0x0000004b, 0x0400026e, /* 0400026e //C 0004b call	printsnl */
0x0000004c, 0x01020302, /* 01020302 //C 0004c mvzl	r0,at_eol	; at_eol= 1 */
0x0000004d, 0x01120001, /* 01120001 //C 0004d mvzl	r1,1 */
0x0000004e, 0x0c100000, /* 0c100000 //C 0004e st	r1,r0 */
0x0000004f, 0x0fed0000, /* 0fed0000 //C 0004f pop	lr */
0x00000050, 0x00f00e00, /* 00f00e00 //C 00050 ret */
0x00000051, 0x00000047, /* 00000047 //C 00051 db	71 */
0x00000052, 0x0000006f, /* 0000006f //C 00052 db	111 */
0x00000053, 0x00000074, /* 00000074 //C 00053 db	116 */
0x00000054, 0x0000003a, /* 0000003a //C 00054 db	58 */
0x00000055, 0x00000000, /* 00000000 //C 00055 db */
0x00000056, 0x00000055, /* 00000055 //C 00056 db	85 */
0x00000057, 0x0000006e, /* 0000006e //C 00057 db	110 */
0x00000058, 0x0000006b, /* 0000006b //C 00058 db	107 */
0x00000059, 0x0000006e, /* 0000006e //C 00059 db	110 */
0x0000005a, 0x0000006f, /* 0000006f //C 0005a db	111 */
0x0000005b, 0x00000077, /* 00000077 //C 0005b db	119 */
0x0000005c, 0x0000006e, /* 0000006e //C 0005c db	110 */
0x0000005d, 0x00000020, /* 00000020 //C 0005d db	32 */
0x0000005e, 0x00000063, /* 00000063 //C 0005e db	99 */
0x0000005f, 0x0000006f, /* 0000006f //C 0005f db	111 */
0x00000060, 0x0000006d, /* 0000006d //C 00060 db	109 */
0x00000061, 0x0000006d, /* 0000006d //C 00061 db	109 */
0x00000062, 0x00000061, /* 00000061 //C 00062 db	97 */
0x00000063, 0x0000006e, /* 0000006e //C 00063 db	110 */
0x00000064, 0x00000064, /* 00000064 //C 00064 db	100 */
0x00000065, 0x00000000, /* 00000000 //C 00065 db */
0x00000066, 0x0ded0000, /* 0ded0000 //C 00066 push	lr */
0x00000067, 0x01120319, /* 01120319 //C 00067 mvzl	r1,delimiters */
0x00000068, 0x040001a5, /* 040001a5 //C 00068 call	strchr */
0x00000069, 0x0fed0000, /* 0fed0000 //C 00069 pop	lr */
0x0000006a, 0x00f00e00, /* 00f00e00 //C 0006a ret */
0x0000006b, 0x0ded0000, /* 0ded0000 //C 0006b push	lr */
0x0000006c, 0x01420303, /* 01420303 //C 0006c mvzl	r4,words	; array of result */
0x0000006d, 0x0152029d, /* 0152029d //C 0006d mvzl	r5,line		; address of next char */
0x0000006e, 0x01620000, /* 01620000 //C 0006e mvzl	r6,0		; nuof words found */
0x0000006f, 0x01720000, /* 01720000 //C 0006f mvzl	r7,0		; bool in_word */
0x00000070, 0x0e050000, /* 0e050000 //C 00070 ld	r0,r5		; pick a char */
0x00000071, 0x020b0000, /* 020b0000 //C 00071 sz	r0		; check end */
0x00000072, 0x11f2007c, /* 11f2007c //C 00072 jz	tok_delimiter	; found end, pretend delim */
0x00000073, 0x04000066, /* 04000066 //C 00073 call	is_delimiter */
0x00000074, 0x31f2007c, /* 31f2007c //C 00074 C1 jmp	tok_delimiter */
0x00000075, 0x027b0000, /* 027b0000 //C 00075 sz	r7 */
0x00000076, 0x21f20081, /* 21f20081 //C 00076 jnz	tok_next	; still inside word */
0x00000077, 0x01720001, /* 01720001 //C 00077 mvzl	r7,1		; in_word=true */
0x00000078, 0x09568400, /* 09568400 //C 00078 st	r5,r6+,r4	; record word address */
0x00000079, 0x01680005, /* 01680005 //C 00079 cmp	r6,MAX_WORDS	; If no more space */
0x0000007a, 0x11f20085, /* 11f20085 //C 0007a EQ jmp	tok_ret		; then return */
0x0000007b, 0x01f20081, /* 01f20081 //C 0007b jmp	tok_next */
0x0000007c, 0x027b0000, /* 027b0000 //C 0007c sz	r7 */
0x0000007d, 0x11f20081, /* 11f20081 //C 0007d jz	tok_next	; still between words */
0x0000007e, 0x01720000, /* 01720000 //C 0007e mvzl	r7,0		; in_word=false */
0x0000007f, 0x01120000, /* 01120000 //C 0007f mvzl	r1,0		; put a 0 at the end of word */
0x00000080, 0x08150100, /* 08150100 //C 00080 st	r1,r5,r1 */
0x00000081, 0x020b0000, /* 020b0000 //C 00081 sz	r0		; check EOL */
0x00000082, 0x11f20085, /* 11f20085 //C 00082 jz	tok_ret		; jump out if char==0 */
0x00000083, 0x01540001, /* 01540001 //C 00083 add	r5,1 */
0x00000084, 0x01f20070, /* 01f20070 //C 00084 jmp	tok_cycle */
0x00000085, 0x01120000, /* 01120000 //C 00085 mvzl	r1,0 */
0x00000086, 0x01680005, /* 01680005 //C 00086 cmp	r6,MAX_WORDS */
0x00000087, 0x11f2008a, /* 11f2008a //C 00087 jz	tok_end */
0x00000088, 0x09168400, /* 09168400 //C 00088 st	r1,r6+,r4 */
0x00000089, 0x01f20085, /* 01f20085 //C 00089 jmp	tok_ret */
0x0000008a, 0x0fed0000, /* 0fed0000 //C 0008a pop	lr */
0x0000008b, 0x00f00e00, /* 00f00e00 //C 0008b ret */
0x0000008c, 0x0ded0000, /* 0ded0000 //C 0008c push	lr */
0x0000008d, 0x0d1d0000, /* 0d1d0000 //C 0008d push	r1 */
0x0000008e, 0x0d2d0000, /* 0d2d0000 //C 0008e push	r2 */
0x0000008f, 0x0d3d0000, /* 0d3d0000 //C 0008f push	r3 */
0x00000090, 0x0dad0000, /* 0dad0000 //C 00090 push	r10 */
0x00000091, 0x01020303, /* 01020303 //C 00091 mvzl	r0,words	; R0= 1st word of command */
0x00000092, 0x0e000000, /* 0e000000 //C 00092 ld	r0,r0 */
0x00000093, 0x020b0000, /* 020b0000 //C 00093 sz	r0 */
0x00000094, 0x11f200a9, /* 11f200a9 //C 00094 jz	find_cmd_false */
0x00000095, 0x01a20329, /* 01a20329 //C 00095 mvzl	r10,commands */
0x00000096, 0x0e2a0000, /* 0e2a0000 //C 00096 ld	r2,r10		; R2= cmd addr */
0x00000097, 0x022b0000, /* 022b0000 //C 00097 sz	r2 */
0x00000098, 0x11f200a9, /* 11f200a9 //C 00098 jz	find_cmd_false */
0x00000099, 0x01a40001, /* 01a40001 //C 00099 add	r10,1 */
0x0000009a, 0x00100a00, /* 00100a00 //C 0009a mov	r1,r10		; R1= cmd string */
0x0000009b, 0x01a40001, /* 01a40001 //C 0009b add	r10,1 */
0x0000009c, 0x0e3a0000, /* 0e3a0000 //C 0009c ld	r3,r10 */
0x0000009d, 0x023b0000, /* 023b0000 //C 0009d sz	r3 */
0x0000009e, 0x21f2009b, /* 21f2009b //C 0009e jnz	find_cmd_fw */
0x0000009f, 0x01a40001, /* 01a40001 //C 0009f add	r10,1 */
0x000000a0, 0x040001e0, /* 040001e0 //C 000a0 call	streq */
0x000000a1, 0x41f20096, /* 41f20096 //C 000a1 C0 jmp	find_cmd_cyc */
0x000000a2, 0x00000200, /* 00000200 //C 000a2 mov	r0,r2 */
0x000000a3, 0x020c0000, /* 020c0000 //C 000a3 sec */
0x000000a4, 0x01f200b4, /* 01f200b4 //C 000a4 jmp	find_cmd_ret */
0x000000a5, 0x0000002f, /* 0000002f //C 000a5 db	47 */
0x000000a6, 0x0000002f, /* 0000002f //C 000a6 db	47 */
0x000000a7, 0x00000043, /* 00000043 //C 000a7 db	67 */
0x000000a8, 0x00000000, /* 00000000 //C 000a8 db */
0x000000a9, 0x01040001, /* 01040001 //C 000a9 add	r0,1		; check second word */
0x000000aa, 0x0e100000, /* 0e100000 //C 000aa ld	r1,r0		; for //C command */
0x000000ab, 0x021b0000, /* 021b0000 //C 000ab sz	r1 */
0x000000ac, 0x11f200b2, /* 11f200b2 //C 000ac jz	find_cmd_very_false */
0x000000ad, 0x010200a5, /* 010200a5 //C 000ad mvzl	r0,c_cmd_name */
0x000000ae, 0x040001e0, /* 040001e0 //C 000ae call	streq */
0x000000af, 0x21f200b2, /* 21f200b2 //C 000af jnz	find_cmd_very_false */
0x000000b0, 0x01220143, /* 01220143 //C 000b0 mvzl	r2,cmd_c */
0x000000b1, 0x01f200a2, /* 01f200a2 //C 000b1 jmp	find_cmd_true */
0x000000b2, 0x020d0000, /* 020d0000 //C 000b2 clc */
0x000000b3, 0x01020000, /* 01020000 //C 000b3 mvzl	r0,0 */
0x000000b4, 0x0fad0000, /* 0fad0000 //C 000b4 pop	r10 */
0x000000b5, 0x0f3d0000, /* 0f3d0000 //C 000b5 pop	r3 */
0x000000b6, 0x0f2d0000, /* 0f2d0000 //C 000b6 pop	r2 */
0x000000b7, 0x0f1d0000, /* 0f1d0000 //C 000b7 pop	r1 */
0x000000b8, 0x0fed0000, /* 0fed0000 //C 000b8 pop	lr */
0x000000b9, 0x00f00e00, /* 00f00e00 //C 000b9 ret */
0x000000ba, 0x0ded0000, /* 0ded0000 //C 000ba push	lr */
0x000000bb, 0x01220303, /* 01220303 //C 000bb mvzl	r2,words */
0x000000bc, 0x01020000, /* 01020000 //C 000bc mvzl	r0,0 */
0x000000bd, 0x0e420001, /* 0e420001 //C 000bd ld	r4,r2,1		; addr */
0x000000be, 0x0e520002, /* 0e520002 //C 000be ld	r5,r2,2		; value */
0x000000bf, 0x024b0000, /* 024b0000 //C 000bf sz 	r4 */
0x000000c0, 0x11f200e1, /* 11f200e1 //C 000c0 jz	m_ret */
0x000000c1, 0x00000400, /* 00000400 //C 000c1 mov	r0,r4 */
0x000000c2, 0x04000222, /* 04000222 //C 000c2 call	htoi */
0x000000c3, 0x00400100, /* 00400100 //C 000c3 mov	r4,r1 */
0x000000c4, 0x31f200c8, /* 31f200c8 //C 000c4 C1 jmp	m_addr_ok */
0x000000c5, 0x010200e3, /* 010200e3 //C 000c5 mvzl	r0,m_err_addr */
0x000000c6, 0x0400026e, /* 0400026e //C 000c6 call	printsnl */
0x000000c7, 0x01f200e1, /* 01f200e1 //C 000c7 jmp	m_ret */
0x000000c8, 0x025b0000, /* 025b0000 //C 000c8 sz	r5 */
0x000000c9, 0x11f200d7, /* 11f200d7 //C 000c9 jz	m_read */
0x000000ca, 0x01480457, /* 01480457 //C 000ca cmp	r4,the_end */
0x000000cb, 0x91f200cf, /* 91f200cf //C 000cb HI jmp	m_addrv_ok */
0x000000cc, 0x010200f1, /* 010200f1 //C 000cc mvzl	r0,m_err_addrv */
0x000000cd, 0x0400026e, /* 0400026e //C 000cd call	printsnl */
0x000000ce, 0x01f200e1, /* 01f200e1 //C 000ce jmp	m_ret */
0x000000cf, 0x00000500, /* 00000500 //C 000cf mov	r0,r5 */
0x000000d0, 0x04000222, /* 04000222 //C 000d0 call	htoi */
0x000000d1, 0x00500100, /* 00500100 //C 000d1 mov	r5,r1 */
0x000000d2, 0x31f200d6, /* 31f200d6 //C 000d2 C1 jmp	m_value_ok */
0x000000d3, 0x01020103, /* 01020103 //C 000d3 mvzl	r0,m_err_value */
0x000000d4, 0x0400026e, /* 0400026e //C 000d4 call	printsnl */
0x000000d5, 0x01f200e1, /* 01f200e1 //C 000d5 jmp	m_ret */
0x000000d6, 0x0c540000, /* 0c540000 //C 000d6 st	r5,r4 */
0x000000d7, 0x00000400, /* 00000400 //C 000d7 mov	r0,r4 */
0x000000d8, 0x01120004, /* 01120004 //C 000d8 mvzl	r1,4 */
0x000000d9, 0x04000276, /* 04000276 //C 000d9 call	print_vhex */
0x000000da, 0x01020020, /* 01020020 //C 000da mvzl	r0,0x20 */
0x000000db, 0x0400024f, /* 0400024f //C 000db call	putchar */
0x000000dc, 0x0e040000, /* 0e040000 //C 000dc ld	r0,r4 */
0x000000dd, 0x01120004, /* 01120004 //C 000dd mvzl	r1,4 */
0x000000de, 0x04000276, /* 04000276 //C 000de call	print_vhex */
0x000000df, 0x0102000a, /* 0102000a //C 000df mvzl	r0,LF */
0x000000e0, 0x0400024f, /* 0400024f //C 000e0 call	putchar */
0x000000e1, 0x0fed0000, /* 0fed0000 //C 000e1 pop	lr */
0x000000e2, 0x00f00e00, /* 00f00e00 //C 000e2 ret */
0x000000e3, 0x00000041, /* 00000041 //C 000e3 db	65 */
0x000000e4, 0x00000064, /* 00000064 //C 000e4 db	100 */
0x000000e5, 0x00000064, /* 00000064 //C 000e5 db	100 */
0x000000e6, 0x00000072, /* 00000072 //C 000e6 db	114 */
0x000000e7, 0x00000065, /* 00000065 //C 000e7 db	101 */
0x000000e8, 0x00000073, /* 00000073 //C 000e8 db	115 */
0x000000e9, 0x00000073, /* 00000073 //C 000e9 db	115 */
0x000000ea, 0x00000020, /* 00000020 //C 000ea db	32 */
0x000000eb, 0x00000065, /* 00000065 //C 000eb db	101 */
0x000000ec, 0x00000072, /* 00000072 //C 000ec db	114 */
0x000000ed, 0x00000072, /* 00000072 //C 000ed db	114 */
0x000000ee, 0x0000006f, /* 0000006f //C 000ee db	111 */
0x000000ef, 0x00000072, /* 00000072 //C 000ef db	114 */
0x000000f0, 0x00000000, /* 00000000 //C 000f0 db */
0x000000f1, 0x0000004d, /* 0000004d //C 000f1 db	77 */
0x000000f2, 0x0000006f, /* 0000006f //C 000f2 db	111 */
0x000000f3, 0x0000006e, /* 0000006e //C 000f3 db	110 */
0x000000f4, 0x00000069, /* 00000069 //C 000f4 db	105 */
0x000000f5, 0x00000074, /* 00000074 //C 000f5 db	116 */
0x000000f6, 0x0000006f, /* 0000006f //C 000f6 db	111 */
0x000000f7, 0x00000072, /* 00000072 //C 000f7 db	114 */
0x000000f8, 0x00000027, /* 00000027 //C 000f8 db	39 */
0x000000f9, 0x00000073, /* 00000073 //C 000f9 db	115 */
0x000000fa, 0x00000020, /* 00000020 //C 000fa db	32 */
0x000000fb, 0x00000061, /* 00000061 //C 000fb db	97 */
0x000000fc, 0x00000064, /* 00000064 //C 000fc db	100 */
0x000000fd, 0x00000064, /* 00000064 //C 000fd db	100 */
0x000000fe, 0x00000072, /* 00000072 //C 000fe db	114 */
0x000000ff, 0x00000065, /* 00000065 //C 000ff db	101 */
0x00000100, 0x00000073, /* 00000073 //C 00100 db	115 */
0x00000101, 0x00000073, /* 00000073 //C 00101 db	115 */
0x00000102, 0x00000000, /* 00000000 //C 00102 db */
0x00000103, 0x00000056, /* 00000056 //C 00103 db	86 */
0x00000104, 0x00000061, /* 00000061 //C 00104 db	97 */
0x00000105, 0x0000006c, /* 0000006c //C 00105 db	108 */
0x00000106, 0x00000075, /* 00000075 //C 00106 db	117 */
0x00000107, 0x00000065, /* 00000065 //C 00107 db	101 */
0x00000108, 0x00000020, /* 00000020 //C 00108 db	32 */
0x00000109, 0x00000065, /* 00000065 //C 00109 db	101 */
0x0000010a, 0x00000072, /* 00000072 //C 0010a db	114 */
0x0000010b, 0x00000072, /* 00000072 //C 0010b db	114 */
0x0000010c, 0x0000006f, /* 0000006f //C 0010c db	111 */
0x0000010d, 0x00000072, /* 00000072 //C 0010d db	114 */
0x0000010e, 0x00000000, /* 00000000 //C 0010e db */
0x0000010f, 0x0ded0000, /* 0ded0000 //C 0010f push	lr */
0x00000110, 0x01220303, /* 01220303 //C 00110 mvzl	r2,words */
0x00000111, 0x0e020001, /* 0e020001 //C 00111 ld	r0,r2,1		; start address */
0x00000112, 0x04000222, /* 04000222 //C 00112 call	htoi */
0x00000113, 0x00300100, /* 00300100 //C 00113 mov	r3,r1 */
0x00000114, 0x0e020002, /* 0e020002 //C 00114 ld	r0,r2,2		; end address */
0x00000115, 0x020b0000, /* 020b0000 //C 00115 sz	r0 */
0x00000116, 0x21f2011a, /* 21f2011a //C 00116 jnz	d_end_ok */
0x00000117, 0x00400300, /* 00400300 //C 00117 mov	r4,r3 */
0x00000118, 0x01440010, /* 01440010 //C 00118 add	r4,0x10 */
0x00000119, 0x01f2011c, /* 01f2011c //C 00119 jmp	d_chk_end */
0x0000011a, 0x04000222, /* 04000222 //C 0011a call	htoi */
0x0000011b, 0x00400100, /* 00400100 //C 0011b mov	r4,r1 */
0x0000011c, 0x00380400, /* 00380400 //C 0011c cmp	r3,r4		; check if start>end */
0x0000011d, 0x91f2012c, /* 91f2012c //C 0011d HI jmp d_bad */
0x0000011e, 0x00000300, /* 00000300 //C 0011e mov	r0,r3		; print address */
0x0000011f, 0x01120004, /* 01120004 //C 0011f mvzl	r1,4 */
0x00000120, 0x04000276, /* 04000276 //C 00120 call	print_vhex */
0x00000121, 0x01020020, /* 01020020 //C 00121 mvzl	r0,0x20		; print one space */
0x00000122, 0x0400024f, /* 0400024f //C 00122 call	putchar */
0x00000123, 0x0e030000, /* 0e030000 //C 00123 ld	r0,r3		; load data */
0x00000124, 0x01120004, /* 01120004 //C 00124 mvzl	r1,4		; print data */
0x00000125, 0x04000276, /* 04000276 //C 00125 call	print_vhex */
0x00000126, 0x0102000a, /* 0102000a //C 00126 mvzl	r0,LF		; print new line */
0x00000127, 0x0400024f, /* 0400024f //C 00127 call	putchar */
0x00000128, 0x00380400, /* 00380400 //C 00128 cmp	r3,r4 */
0x00000129, 0x11f2012e, /* 11f2012e //C 00129 jz	d_ret */
0x0000012a, 0x01340001, /* 01340001 //C 0012a add	r3,1 */
0x0000012b, 0x01f2011e, /* 01f2011e //C 0012b jmp	d_cyc */
0x0000012c, 0x01020130, /* 01020130 //C 0012c mvzl	r0,d_err_bad */
0x0000012d, 0x0400026e, /* 0400026e //C 0012d call	printsnl */
0x0000012e, 0x0fed0000, /* 0fed0000 //C 0012e pop	lr */
0x0000012f, 0x00f00e00, /* 00f00e00 //C 0012f ret */
0x00000130, 0x00000057, /* 00000057 //C 00130 db	87 */
0x00000131, 0x00000072, /* 00000072 //C 00131 db	114 */
0x00000132, 0x0000006f, /* 0000006f //C 00132 db	111 */
0x00000133, 0x0000006e, /* 0000006e //C 00133 db	110 */
0x00000134, 0x00000067, /* 00000067 //C 00134 db	103 */
0x00000135, 0x00000020, /* 00000020 //C 00135 db	32 */
0x00000136, 0x00000065, /* 00000065 //C 00136 db	101 */
0x00000137, 0x0000006e, /* 0000006e //C 00137 db	110 */
0x00000138, 0x00000064, /* 00000064 //C 00138 db	100 */
0x00000139, 0x00000020, /* 00000020 //C 00139 db	32 */
0x0000013a, 0x00000061, /* 00000061 //C 0013a db	97 */
0x0000013b, 0x00000064, /* 00000064 //C 0013b db	100 */
0x0000013c, 0x00000064, /* 00000064 //C 0013c db	100 */
0x0000013d, 0x00000072, /* 00000072 //C 0013d db	114 */
0x0000013e, 0x00000065, /* 00000065 //C 0013e db	101 */
0x0000013f, 0x00000073, /* 00000073 //C 0013f db	115 */
0x00000140, 0x00000073, /* 00000073 //C 00140 db	115 */
0x00000141, 0x00000000, /* 00000000 //C 00141 db */
0x00000142, 0x00f00e00, /* 00f00e00 //C 00142 ret */
0x00000143, 0x00f00e00, /* 00f00e00 //C 00143 ret */
0x00000144, 0x0ded0000, /* 0ded0000 //C 00144 push	lr */
0x00000145, 0x01a20000, /* 01a20000 //C 00145 mvzl	r10,0		; state (nr of words) */
0x00000146, 0x01820000, /* 01820000 //C 00146 mvzl	r8,0		; value */
0x00000147, 0x0162003f, /* 0162003f //C 00147 mvzl	r6,'?'		; Record type */
0x00000148, 0x04000244, /* 04000244 //C 00148 call	check_uart */
0x00000149, 0x41f20148, /* 41f20148 //C 00149 C0 jmp	l_cyc */
0x0000014a, 0x0400024c, /* 0400024c //C 0014a call	read */
0x0000014b, 0x00b00000, /* 00b00000 //C 0014b mov	r11,r0		; Copy of char in R11 */
0x0000014c, 0x0108000a, /* 0108000a //C 0014c cmp	r0,10		; check EOL chars */
0x0000014d, 0x11f2018f, /* 11f2018f //C 0014d jz	l_eol */
0x0000014e, 0x0108000d, /* 0108000d //C 0014e cmp	r0,13 */
0x0000014f, 0x11f2018f, /* 11f2018f //C 0014f jz	l_eol */
0x00000150, 0x01a80000, /* 01a80000 //C 00150 cmp	r10,0 */
0x00000151, 0x21f2015f, /* 21f2015f //C 00151 jnz	l_no0 */
0x00000152, 0x040001ee, /* 040001ee //C 00152 call	hexchar2value */
0x00000153, 0x41f2015b, /* 41f2015b //C 00153 C0 jmp	l_eof_0 */
0x00000154, 0x02880000, /* 02880000 //C 00154 shl	r8		; shift val(char) into value */
0x00000155, 0x02880000, /* 02880000 //C 00155 shl	r8 */
0x00000156, 0x02880000, /* 02880000 //C 00156 shl	r8 */
0x00000157, 0x02880000, /* 02880000 //C 00157 shl	r8 */
0x00000158, 0x010b000f, /* 010b000f //C 00158 btst	r0,0xf */
0x00000159, 0x008d0000, /* 008d0000 //C 00159 or	r8,r0 */
0x0000015a, 0x01f20148, /* 01f20148 //C 0015a jmp	l_cyc */
0x0000015b, 0x01a20001, /* 01a20001 //C 0015b mvzl	r10,1		; state0 -> state1 */
0x0000015c, 0x0162003f, /* 0162003f //C 0015c mvzl	r6,'?'		; No //C yet */
0x0000015d, 0x01720000, /* 01720000 //C 0015d mvzl	r7,0		; No '/' yet */
0x0000015e, 0x01f20148, /* 01f20148 //C 0015e jmp	l_cyc */
0x0000015f, 0x01a80001, /* 01a80001 //C 0015f cmp	r10,1 */
0x00000160, 0x21f20176, /* 21f20176 //C 00160 jnz	l_no1 */
0x00000161, 0x027b0000, /* 027b0000 //C 00161 sz	r7 */
0x00000162, 0x21f20167, /* 21f20167 //C 00162 jnz	l_s1_2nd */
0x00000163, 0x0108002f, /* 0108002f //C 00163 cmp	r0,'/' */
0x00000164, 0x21f20148, /* 21f20148 //C 00164 jnz	l_cyc */
0x00000165, 0x01720001, /* 01720001 //C 00165 mvzl	r7,1 */
0x00000166, 0x01f20148, /* 01f20148 //C 00166 jmp	l_cyc */
0x00000167, 0x0108002f, /* 0108002f //C 00167 cmp	r0,'/' */
0x00000168, 0x11f20148, /* 11f20148 //C 00168 jz	l_cyc */
0x00000169, 0x01080043, /* 01080043 //C 00169 cmp	r0,'C' */
0x0000016a, 0x21f20170, /* 21f20170 //C 0016a jnz	l_s1_noC */
0x0000016b, 0x01620043, /* 01620043 //C 0016b mvzl	r6,'C' */
0x0000016c, 0x01a20002, /* 01a20002 //C 0016c mvzl	r10,2 */
0x0000016d, 0x01920000, /* 01920000 //C 0016d mvzl	r9,0		; address= 0 */
0x0000016e, 0x01520000, /* 01520000 //C 0016e mvzl	r5,0		; where we are in word: before */
0x0000016f, 0x01f20148, /* 01f20148 //C 0016f jmp	l_cyc */
0x00000170, 0x01080045, /* 01080045 //C 00170 cmp	r0,'E' */
0x00000171, 0x21f20175, /* 21f20175 //C 00171 jnz	l_s1_noE */
0x00000172, 0x01620045, /* 01620045 //C 00172 mvzl	r6,'E' */
0x00000173, 0x01a20003, /* 01a20003 //C 00173 mvzl	r10,3 */
0x00000174, 0x01f20148, /* 01f20148 //C 00174 jmp	l_cyc */
0x00000175, 0x01f20148, /* 01f20148 //C 00175 jmp	l_cyc */
0x00000176, 0x01a80002, /* 01a80002 //C 00176 cmp	r10,2 */
0x00000177, 0x21f2018b, /* 21f2018b //C 00177 jnz	l_no2 */
0x00000178, 0x01580000, /* 01580000 //C 00178 cmp	r5,0 */
0x00000179, 0x21f20184, /* 21f20184 //C 00179 jnz	l_s2_no0 */
0x0000017a, 0x040001ee, /* 040001ee //C 0017a call	hexchar2value */
0x0000017b, 0x41f20148, /* 41f20148 //C 0017b C0 jmp	l_cyc */
0x0000017c, 0x01520001, /* 01520001 //C 0017c mvzl	r5,1 */
0x0000017d, 0x02980000, /* 02980000 //C 0017d shl	r9 */
0x0000017e, 0x02980000, /* 02980000 //C 0017e shl	r9 */
0x0000017f, 0x02980000, /* 02980000 //C 0017f shl	r9 */
0x00000180, 0x02980000, /* 02980000 //C 00180 shl	r9 */
0x00000181, 0x010b000f, /* 010b000f //C 00181 btst	r0,0xf */
0x00000182, 0x009d0000, /* 009d0000 //C 00182 or	r9,r0 */
0x00000183, 0x01f20148, /* 01f20148 //C 00183 jmp	l_cyc */
0x00000184, 0x01580001, /* 01580001 //C 00184 cmp	r5,1 */
0x00000185, 0x21f2018a, /* 21f2018a //C 00185 jnz	l_s2_no1 */
0x00000186, 0x040001ee, /* 040001ee //C 00186 call	hexchar2value */
0x00000187, 0x31f2017d, /* 31f2017d //C 00187 C1 jmp	l_s2_got */
0x00000188, 0x01520002, /* 01520002 //C 00188 mvzl	r5,2 */
0x00000189, 0x01f20148, /* 01f20148 //C 00189 jmp	l_cyc */
0x0000018a, 0x01f20148, /* 01f20148 //C 0018a jmp	l_cyc */
0x0000018b, 0x01a80003, /* 01a80003 //C 0018b cmp	r10,3 */
0x0000018c, 0x21f2018e, /* 21f2018e //C 0018c jnz	l_no3 */
0x0000018d, 0x01f20148, /* 01f20148 //C 0018d jmp	l_cyc		; do nothing, just wait EOL */
0x0000018e, 0x01f201a1, /* 01f201a1 //C 0018e jmp	l_ret */
0x0000018f, 0x01a80000, /* 01a80000 //C 0018f cmp	r10,0		; in state0 */
0x00000190, 0x11f20148, /* 11f20148 //C 00190 jz	l_cyc		; just skip */
0x00000191, 0x01a80001, /* 01a80001 //C 00191 cmp	r10,1		; in state1 */
0x00000192, 0x11f20198, /* 11f20198 //C 00192 jz	l_bad		; garbage */
0x00000193, 0x01a80002, /* 01a80002 //C 00193 cmp	r10,2		; in state2 */
0x00000194, 0x11f20199, /* 11f20199 //C 00194 jz	l_proc		; process record */
0x00000195, 0x01a80003, /* 01a80003 //C 00195 cmp	r10,3		; in state3 */
0x00000196, 0x11f201a1, /* 11f201a1 //C 00196 jz	l_ret		; eol in end record: finish */
0x00000197, 0x01f20148, /* 01f20148 //C 00197 jmp	l_cyc */
0x00000198, 0x01f201a1, /* 01f201a1 //C 00198 jmp	l_ret */
0x00000199, 0x01680043, /* 01680043 //C 00199 cmp	r6,'C'		; is it a C record? */
0x0000019a, 0x1c890000, /* 1c890000 //C 0019a z st	r8,r9		; store */
0x0000019b, 0x00000600, /* 00000600 //C 0019b mov	r0,r6		; echo record type */
0x0000019c, 0x0400024f, /* 0400024f //C 0019c call	putchar */
0x0000019d, 0x01a20000, /* 01a20000 //C 0019d mvzl	r10,0 */
0x0000019e, 0x01820000, /* 01820000 //C 0019e mvzl	r8,0 */
0x0000019f, 0x0162003f, /* 0162003f //C 0019f mvzl	r6,'?' */
0x000001a0, 0x01f20148, /* 01f20148 //C 001a0 jmp	l_cyc */
0x000001a1, 0x0102000a, /* 0102000a //C 001a1 mvzl	r0,LF */
0x000001a2, 0x0400024f, /* 0400024f //C 001a2 call	putchar */
0x000001a3, 0x0fed0000, /* 0fed0000 //C 001a3 pop	lr */
0x000001a4, 0x00f00e00, /* 00f00e00 //C 001a4 ret */
0x000001a5, 0x0d1d0000, /* 0d1d0000 //C 001a5 push	r1 */
0x000001a6, 0x0d2d0000, /* 0d2d0000 //C 001a6 push	r2 */
0x000001a7, 0x0e210000, /* 0e210000 //C 001a7 ld	r2,r1 */
0x000001a8, 0x022b0000, /* 022b0000 //C 001a8 sz	r2 */
0x000001a9, 0x11f201b0, /* 11f201b0 //C 001a9 jz	strchr_no	; eof string found */
0x000001aa, 0x00280000, /* 00280000 //C 001aa cmp	r2,r0		; compare */
0x000001ab, 0x11f201ae, /* 11f201ae //C 001ab jz	strchr_yes */
0x000001ac, 0x011a0001, /* 011a0001 //C 001ac plus	r1,1		; go to next char */
0x000001ad, 0x01f201a7, /* 01f201a7 //C 001ad jmp	strchr_cyc */
0x000001ae, 0x020c0000, /* 020c0000 //C 001ae sec */
0x000001af, 0x01f201b2, /* 01f201b2 //C 001af jmp	strchr_ret */
0x000001b0, 0x01120000, /* 01120000 //C 001b0 mvzl	r1,0 */
0x000001b1, 0x020d0000, /* 020d0000 //C 001b1 clc */
0x000001b2, 0x0f2d0000, /* 0f2d0000 //C 001b2 pop	r2 */
0x000001b3, 0x0f1d0000, /* 0f1d0000 //C 001b3 pop	r1 */
0x000001b4, 0x00f00e00, /* 00f00e00 //C 001b4 ret */
0x000001b5, 0x0ded0000, /* 0ded0000 //C 001b5 push	lr		; Save used registers */
0x000001b6, 0x0d0d0000, /* 0d0d0000 //C 001b6 push	r0		; and input parameters */
0x000001b7, 0x0d1d0000, /* 0d1d0000 //C 001b7 push	r1 */
0x000001b8, 0x0d2d0000, /* 0d2d0000 //C 001b8 push	r2 */
0x000001b9, 0x0d4d0000, /* 0d4d0000 //C 001b9 push	r4 */
0x000001ba, 0x0d5d0000, /* 0d5d0000 //C 001ba push	r5 */
0x000001bb, 0x0d6d0000, /* 0d6d0000 //C 001bb push	r6 */
0x000001bc, 0x0e200000, /* 0e200000 //C 001bc ld	r2,r0		; Got one-one char */
0x000001bd, 0x0e610000, /* 0e610000 //C 001bd ld	r6,r1		; from two strings */
0x000001be, 0x023b0000, /* 023b0000 //C 001be sz	r3		; Prepare for comparing */
0x000001bf, 0x112d0020, /* 112d0020 //C 001bf Z1 or	r2,0x20		; if insensitive case */
0x000001c0, 0x023b0000, /* 023b0000 //C 001c0 sz	r3 */
0x000001c1, 0x116d0020, /* 116d0020 //C 001c1 Z1 or	r6,0x20 */
0x000001c2, 0x00280600, /* 00280600 //C 001c2 cmp	r2,r6		; compare them */
0x000001c3, 0x21f201d5, /* 21f201d5 //C 001c3 jnz	streq_no	; if differs: strings are not equal */
0x000001c4, 0x0e200000, /* 0e200000 //C 001c4 ld	r2,r0		; Pick original (non-prepared) */
0x000001c5, 0x0e610000, /* 0e610000 //C 001c5 ld	r6,r1		; chars to check EOS */
0x000001c6, 0x022b0000, /* 022b0000 //C 001c6 sz	r2		; convert them to boolean */
0x000001c7, 0x21220001, /* 21220001 //C 001c7 Z0 mvzl	r2,1		; values in R2,R6 */
0x000001c8, 0x11220000, /* 11220000 //C 001c8 Z1 mvzl	r2,0		; and copy in R4,R5 */
0x000001c9, 0x00400200, /* 00400200 //C 001c9 mov	r4,r2 */
0x000001ca, 0x026b0000, /* 026b0000 //C 001ca sz	r6 */
0x000001cb, 0x21620001, /* 21620001 //C 001cb Z0 mvzl	r6,1 */
0x000001cc, 0x11620000, /* 11620000 //C 001cc Z1 mvzl r6,0 */
0x000001cd, 0x00500600, /* 00500600 //C 001cd mov	r5,r6 */
0x000001ce, 0x004d0500, /* 004d0500 //C 001ce or	r4,r5		; if both are EOS: equal */
0x000001cf, 0x11f201d7, /* 11f201d7 //C 001cf jz	streq_yes */
0x000001d0, 0x002f0600, /* 002f0600 //C 001d0 and 	r2,r6		; just one is EOS: not equal */
0x000001d1, 0x11f201d5, /* 11f201d5 //C 001d1 jz	streq_no */
0x000001d2, 0x010a0001, /* 010a0001 //C 001d2 plus	r0,1		; non are EOS: go to check next char */
0x000001d3, 0x011a0001, /* 011a0001 //C 001d3 plus	r1,1 */
0x000001d4, 0x01f201bc, /* 01f201bc //C 001d4 jmp	streq_cyc */
0x000001d5, 0x020d0000, /* 020d0000 //C 001d5 clc			; False result */
0x000001d6, 0x01f201d8, /* 01f201d8 //C 001d6 jmp	streq_ret */
0x000001d7, 0x020c0000, /* 020c0000 //C 001d7 sec			; True result */
0x000001d8, 0x0f6d0000, /* 0f6d0000 //C 001d8 pop	r6 */
0x000001d9, 0x0f5d0000, /* 0f5d0000 //C 001d9 pop	r5 */
0x000001da, 0x0f4d0000, /* 0f4d0000 //C 001da pop	r4 */
0x000001db, 0x0f2d0000, /* 0f2d0000 //C 001db pop	r2 */
0x000001dc, 0x0f1d0000, /* 0f1d0000 //C 001dc pop	r1 */
0x000001dd, 0x0f0d0000, /* 0f0d0000 //C 001dd pop	r0 */
0x000001de, 0x0fed0000, /* 0fed0000 //C 001de pop	lr */
0x000001df, 0x00f00e00, /* 00f00e00 //C 001df ret */
0x000001e0, 0x0ded0000, /* 0ded0000 //C 001e0 push	lr */
0x000001e1, 0x0d3d0000, /* 0d3d0000 //C 001e1 push	r3 */
0x000001e2, 0x01320001, /* 01320001 //C 001e2 mvzl	r3,1 */
0x000001e3, 0x040001b5, /* 040001b5 //C 001e3 call	str_cmp_eq */
0x000001e4, 0x0f3d0000, /* 0f3d0000 //C 001e4 pop	r3 */
0x000001e5, 0x0fed0000, /* 0fed0000 //C 001e5 pop	lr */
0x000001e6, 0x00f00e00, /* 00f00e00 //C 001e6 ret */
0x000001e7, 0x0ded0000, /* 0ded0000 //C 001e7 push	lr */
0x000001e8, 0x0d3d0000, /* 0d3d0000 //C 001e8 push	r3 */
0x000001e9, 0x01320000, /* 01320000 //C 001e9 mvzl	r3,0 */
0x000001ea, 0x040001b5, /* 040001b5 //C 001ea call	str_cmp_eq */
0x000001eb, 0x0f3d0000, /* 0f3d0000 //C 001eb pop	r3 */
0x000001ec, 0x0fed0000, /* 0fed0000 //C 001ec pop	lr */
0x000001ed, 0x00f00e00, /* 00f00e00 //C 001ed ret */
0x000001ee, 0x0108002f, /* 0108002f //C 001ee cmp	r0,'/' */
0x000001ef, 0xa1f20204, /* a1f20204 //C 001ef LS jmp	hc2v_nok */
0x000001f0, 0x01080039, /* 01080039 //C 001f0 cmp	r0,'9' */
0x000001f1, 0xa1f20201, /* a1f20201 //C 001f1 LS jmp	hc2v_0_9 */
0x000001f2, 0x01080040, /* 01080040 //C 001f2 cmp	r0,'@' */
0x000001f3, 0xa1f20204, /* a1f20204 //C 001f3 LS jmp	hc2v_nok */
0x000001f4, 0x01080046, /* 01080046 //C 001f4 cmp	r0,'F' */
0x000001f5, 0xa1f201fe, /* a1f201fe //C 001f5 LS jmp	hc2v_A_F */
0x000001f6, 0x01080060, /* 01080060 //C 001f6 cmp	r0,'`' */
0x000001f7, 0xa1f20204, /* a1f20204 //C 001f7 LS jmp	hc2v_nok */
0x000001f8, 0x01080066, /* 01080066 //C 001f8 cmp	r0,'f' */
0x000001f9, 0xa1f201fb, /* a1f201fb //C 001f9 LS jmp	hc2v_a_f */
0x000001fa, 0x01f20204, /* 01f20204 //C 001fa jmp	hc2v_nok */
0x000001fb, 0x0104000a, /* 0104000a //C 001fb add	r0,10 */
0x000001fc, 0x01060061, /* 01060061 //C 001fc sub	r0,'a' */
0x000001fd, 0x01f20202, /* 01f20202 //C 001fd jmp	hc2v_ok */
0x000001fe, 0x0104000a, /* 0104000a //C 001fe add	r0,10 */
0x000001ff, 0x01060041, /* 01060041 //C 001ff sub	r0,'A' */
0x00000200, 0x01f20202, /* 01f20202 //C 00200 jmp	hc2v_ok */
0x00000201, 0x01060030, /* 01060030 //C 00201 sub	r0,'0' */
0x00000202, 0x020c0000, /* 020c0000 //C 00202 sec */
0x00000203, 0x00f00e00, /* 00f00e00 //C 00203 ret */
0x00000204, 0x020d0000, /* 020d0000 //C 00204 clc */
0x00000205, 0x00f00e00, /* 00f00e00 //C 00205 ret */
0x00000206, 0x0d1d0000, /* 0d1d0000 //C 00206 push	r1 */
0x00000207, 0x010f000f, /* 010f000f //C 00207 and	r0,0xf */
0x00000208, 0x0112020c, /* 0112020c //C 00208 mvzl	r1,v2hc_table */
0x00000209, 0x0a010000, /* 0a010000 //C 00209 ld	r0,r1,r0 */
0x0000020a, 0x0f1d0000, /* 0f1d0000 //C 0020a pop	r1 */
0x0000020b, 0x00f00e00, /* 00f00e00 //C 0020b ret */
0x0000020c, 0x00000030, /* 00000030 //C 0020c db	48 */
0x0000020d, 0x00000031, /* 00000031 //C 0020d db	49 */
0x0000020e, 0x00000032, /* 00000032 //C 0020e db	50 */
0x0000020f, 0x00000033, /* 00000033 //C 0020f db	51 */
0x00000210, 0x00000034, /* 00000034 //C 00210 db	52 */
0x00000211, 0x00000035, /* 00000035 //C 00211 db	53 */
0x00000212, 0x00000036, /* 00000036 //C 00212 db	54 */
0x00000213, 0x00000037, /* 00000037 //C 00213 db	55 */
0x00000214, 0x00000038, /* 00000038 //C 00214 db	56 */
0x00000215, 0x00000039, /* 00000039 //C 00215 db	57 */
0x00000216, 0x00000041, /* 00000041 //C 00216 db	65 */
0x00000217, 0x00000042, /* 00000042 //C 00217 db	66 */
0x00000218, 0x00000043, /* 00000043 //C 00218 db	67 */
0x00000219, 0x00000044, /* 00000044 //C 00219 db	68 */
0x0000021a, 0x00000045, /* 00000045 //C 0021a db	69 */
0x0000021b, 0x00000046, /* 00000046 //C 0021b db	70 */
0x0000021c, 0x00000000, /* 00000000 //C 0021c db */
0x0000021d, 0x0ded0000, /* 0ded0000 //C 0021d push	lr */
0x0000021e, 0x04000206, /* 04000206 //C 0021e call	value2Hexchar */
0x0000021f, 0x010d0020, /* 010d0020 //C 0021f or	r0,0x20 */
0x00000220, 0x0fed0000, /* 0fed0000 //C 00220 pop	lr */
0x00000221, 0x00f00e00, /* 00f00e00 //C 00221 ret */
0x00000222, 0x0ded0000, /* 0ded0000 //C 00222 push	lr */
0x00000223, 0x0d2d0000, /* 0d2d0000 //C 00223 push	r2 */
0x00000224, 0x0d3d0000, /* 0d3d0000 //C 00224 push	r3 */
0x00000225, 0x01120000, /* 01120000 //C 00225 mvzl	r1,0		; return value */
0x00000226, 0x01320000, /* 01320000 //C 00226 mvzl	r3,0		; index */
0x00000227, 0x0b238000, /* 0b238000 //C 00227 ld	r2,r3+,r0	; pick a char */
0x00000228, 0x022b0000, /* 022b0000 //C 00228 sz	r2		; check eof string */
0x00000229, 0x11f2023d, /* 11f2023d //C 00229 jz	htoi_eos */
0x0000022a, 0x0128002e, /* 0128002e //C 0022a cmp	r2,'.'		; skip separators */
0x0000022b, 0x11f20227, /* 11f20227 //C 0022b jz	htoi_cyc */
0x0000022c, 0x0128005f, /* 0128005f //C 0022c cmp	r2,'_' */
0x0000022d, 0x11f20227, /* 11f20227 //C 0022d jz	htoi_cyc */
0x0000022e, 0x0d0d0000, /* 0d0d0000 //C 0022e push	r0 */
0x0000022f, 0x00000200, /* 00000200 //C 0022f mov	r0,r2 */
0x00000230, 0x040001ee, /* 040001ee //C 00230 call	hexchar2value */
0x00000231, 0x00200000, /* 00200000 //C 00231 mov	r2,r0 */
0x00000232, 0x0f0d0000, /* 0f0d0000 //C 00232 pop	r0 */
0x00000233, 0x41f2023b, /* 41f2023b //C 00233 C0 jmp	htoi_nok */
0x00000234, 0x02180000, /* 02180000 //C 00234 shl	r1 */
0x00000235, 0x02180000, /* 02180000 //C 00235 shl	r1 */
0x00000236, 0x02180000, /* 02180000 //C 00236 shl	r1 */
0x00000237, 0x02180000, /* 02180000 //C 00237 shl	r1 */
0x00000238, 0x012f000f, /* 012f000f //C 00238 and	r2,0xf */
0x00000239, 0x001d0200, /* 001d0200 //C 00239 or	r1,r2 */
0x0000023a, 0x01f20227, /* 01f20227 //C 0023a jmp	htoi_cyc */
0x0000023b, 0x020d0000, /* 020d0000 //C 0023b clc */
0x0000023c, 0x01f20240, /* 01f20240 //C 0023c jmp	htoi_ret */
0x0000023d, 0x01380001, /* 01380001 //C 0023d cmp	r3,1 */
0x0000023e, 0x920d0000, /* 920d0000 //C 0023e HI clc */
0x0000023f, 0xa20c0000, /* a20c0000 //C 0023f LS sec */
0x00000240, 0x0f3d0000, /* 0f3d0000 //C 00240 pop	r3 */
0x00000241, 0x0f2d0000, /* 0f2d0000 //C 00241 pop	r2 */
0x00000242, 0x0fed0000, /* 0fed0000 //C 00242 pop	lr */
0x00000243, 0x00f00e00, /* 00f00e00 //C 00243 ret */
0x00000244, 0x0d0d0000, /* 0d0d0000 //C 00244 push	r0 */
0x00000245, 0x0102ff42, /* 0102ff42 //C 00245 mvzl	r0,UART_RSTAT */
0x00000246, 0x0e000000, /* 0e000000 //C 00246 ld	r0,r0 */
0x00000247, 0x010c0001, /* 010c0001 //C 00247 test	r0,1 */
0x00000248, 0x020d0000, /* 020d0000 //C 00248 clc */
0x00000249, 0x220c0000, /* 220c0000 //C 00249 Z0 sec */
0x0000024a, 0x0f0d0000, /* 0f0d0000 //C 0024a pop	r0 */
0x0000024b, 0x00f00e00, /* 00f00e00 //C 0024b ret */
0x0000024c, 0x0102ff40, /* 0102ff40 //C 0024c mvzl	r0,UART_DR */
0x0000024d, 0x0e000000, /* 0e000000 //C 0024d ld	r0,r0 */
0x0000024e, 0x00f00e00, /* 00f00e00 //C 0024e ret */
0x0000024f, 0x0d2d0000, /* 0d2d0000 //C 0024f push	r2 */
0x00000250, 0x0d9d0000, /* 0d9d0000 //C 00250 push	r9 */
0x00000251, 0x0122ff43, /* 0122ff43 //C 00251 mvzl	r2,UART_TSTAT */
0x00000252, 0x0e920000, /* 0e920000 //C 00252 ld	r9,r2 */
0x00000253, 0x019c0001, /* 019c0001 //C 00253 test	r9,1 */
0x00000254, 0x11f20252, /* 11f20252 //C 00254 jz	wait_tc */
0x00000255, 0x0122ff40, /* 0122ff40 //C 00255 mvzl	r2,UART_DR */
0x00000256, 0x0c020000, /* 0c020000 //C 00256 st	r0,r2 */
0x00000257, 0x0f9d0000, /* 0f9d0000 //C 00257 pop	r9 */
0x00000258, 0x0f2d0000, /* 0f2d0000 //C 00258 pop	r2 */
0x00000259, 0x00f00e00, /* 00f00e00 //C 00259 ret */
0x0000025a, 0x0ded0000, /* 0ded0000 //C 0025a push	lr */
0x0000025b, 0x0d0d0000, /* 0d0d0000 //C 0025b push	r0 */
0x0000025c, 0x0d3d0000, /* 0d3d0000 //C 0025c push	r3 */
0x0000025d, 0x0d4d0000, /* 0d4d0000 //C 0025d push	r4 */
0x0000025e, 0x01420000, /* 01420000 //C 0025e mvzl	r4,0 */
0x0000025f, 0x020b0000, /* 020b0000 //C 0025f sz	r0 */
0x00000260, 0x11020322, /* 11020322 //C 00260 Z1 mvzl	r0,null_str */
0x00000261, 0x0b348000, /* 0b348000 //C 00261 ld	r3,r4+,r0 */
0x00000262, 0x023b0000, /* 023b0000 //C 00262 sz	r3 */
0x00000263, 0x11f20269, /* 11f20269 //C 00263 jz	prints_done */
0x00000264, 0x0d0d0000, /* 0d0d0000 //C 00264 push	r0 */
0x00000265, 0x00000300, /* 00000300 //C 00265 mov	r0,r3 */
0x00000266, 0x0400024f, /* 0400024f //C 00266 call	putchar */
0x00000267, 0x0f0d0000, /* 0f0d0000 //C 00267 pop	r0 */
0x00000268, 0x01f20261, /* 01f20261 //C 00268 jmp	prints_go */
0x00000269, 0x0f4d0000, /* 0f4d0000 //C 00269 pop	r4 */
0x0000026a, 0x0f3d0000, /* 0f3d0000 //C 0026a pop	r3 */
0x0000026b, 0x0f0d0000, /* 0f0d0000 //C 0026b pop	r0 */
0x0000026c, 0x0fed0000, /* 0fed0000 //C 0026c pop	lr */
0x0000026d, 0x00f00e00, /* 00f00e00 //C 0026d ret */
0x0000026e, 0x0ded0000, /* 0ded0000 //C 0026e push	lr */
0x0000026f, 0x0400025a, /* 0400025a //C 0026f call	prints */
0x00000270, 0x0d0d0000, /* 0d0d0000 //C 00270 push	r0 */
0x00000271, 0x0102000a, /* 0102000a //C 00271 mvzl	r0,LF */
0x00000272, 0x0400024f, /* 0400024f //C 00272 call	putchar */
0x00000273, 0x0f0d0000, /* 0f0d0000 //C 00273 pop	r0 */
0x00000274, 0x0fed0000, /* 0fed0000 //C 00274 pop	lr */
0x00000275, 0x00f00e00, /* 00f00e00 //C 00275 ret */
0x00000276, 0x0ded0000, /* 0ded0000 //C 00276 push	lr */
0x00000277, 0x0d0d0000, /* 0d0d0000 //C 00277 push	r0 */
0x00000278, 0x0d1d0000, /* 0d1d0000 //C 00278 push	r1 */
0x00000279, 0x0d2d0000, /* 0d2d0000 //C 00279 push	r2 */
0x0000027a, 0x0d3d0000, /* 0d3d0000 //C 0027a push	r3 */
0x0000027b, 0x0d4d0000, /* 0d4d0000 //C 0027b push	r4 */
0x0000027c, 0x00300000, /* 00300000 //C 0027c mov	r3,r0 */
0x0000027d, 0x01220000, /* 01220000 //C 0027d mvzl	r2,0 */
0x0000027e, 0x01420001, /* 01420001 //C 0027e mvzl	r4,1 */
0x0000027f, 0x01020000, /* 01020000 //C 0027f mvzl	r0,0 */
0x00000280, 0x02380000, /* 02380000 //C 00280 shl	r3 */
0x00000281, 0x02070000, /* 02070000 //C 00281 rol	r0 */
0x00000282, 0x02380000, /* 02380000 //C 00282 shl	r3 */
0x00000283, 0x02070000, /* 02070000 //C 00283 rol	r0 */
0x00000284, 0x02380000, /* 02380000 //C 00284 shl	r3 */
0x00000285, 0x02070000, /* 02070000 //C 00285 rol	r0 */
0x00000286, 0x02380000, /* 02380000 //C 00286 shl	r3 */
0x00000287, 0x02070000, /* 02070000 //C 00287 rol	r0 */
0x00000288, 0x04000206, /* 04000206 //C 00288 call	value2Hexchar */
0x00000289, 0x0400024f, /* 0400024f //C 00289 call	putchar */
0x0000028a, 0x01240001, /* 01240001 //C 0028a add	r2,1 */
0x0000028b, 0x01280008, /* 01280008 //C 0028b cmp	r2,8 */
0x0000028c, 0x11f20296, /* 11f20296 //C 0028c jz	print_vhex_ret */
0x0000028d, 0x021b0000, /* 021b0000 //C 0028d sz	r1 */
0x0000028e, 0x11f20294, /* 11f20294 //C 0028e jz	print_vhex_nosep */
0x0000028f, 0x00480100, /* 00480100 //C 0028f cmp	r4,r1 */
0x00000290, 0x21f20294, /* 21f20294 //C 00290 jnz	print_vhex_nosep */
0x00000291, 0x0102005f, /* 0102005f //C 00291 mvzl	r0,'_' */
0x00000292, 0x0400024f, /* 0400024f //C 00292 call	putchar */
0x00000293, 0x01420000, /* 01420000 //C 00293 mvzl	r4,0 */
0x00000294, 0x01440001, /* 01440001 //C 00294 add	r4,1 */
0x00000295, 0x01f2027f, /* 01f2027f //C 00295 jmp	print_vhex_cyc */
0x00000296, 0x0f4d0000, /* 0f4d0000 //C 00296 pop	r4 */
0x00000297, 0x0f3d0000, /* 0f3d0000 //C 00297 pop	r3 */
0x00000298, 0x0f2d0000, /* 0f2d0000 //C 00298 pop	r2 */
0x00000299, 0x0f1d0000, /* 0f1d0000 //C 00299 pop	r1 */
0x0000029a, 0x0f0d0000, /* 0f0d0000 //C 0029a pop	r0 */
0x0000029b, 0x0fed0000, /* 0fed0000 //C 0029b pop	lr */
0x0000029c, 0x00f00e00, /* 00f00e00 //C 0029c ret */
0x00000309, 0x00000050, /* 00000050 //C 00309 db	80 */
0x0000030a, 0x0000004d, /* 0000004d //C 0030a db	77 */
0x0000030b, 0x0000006f, /* 0000006f //C 0030b db	111 */
0x0000030c, 0x0000006e, /* 0000006e //C 0030c db	110 */
0x0000030d, 0x00000069, /* 00000069 //C 0030d db	105 */
0x0000030e, 0x00000074, /* 00000074 //C 0030e db	116 */
0x0000030f, 0x0000006f, /* 0000006f //C 0030f db	111 */
0x00000310, 0x00000072, /* 00000072 //C 00310 db	114 */
0x00000311, 0x00000020, /* 00000020 //C 00311 db	32 */
0x00000312, 0x00000076, /* 00000076 //C 00312 db	118 */
0x00000313, 0x00000031, /* 00000031 //C 00313 db	49 */
0x00000314, 0x0000002e, /* 0000002e //C 00314 db	46 */
0x00000315, 0x00000030, /* 00000030 //C 00315 db	48 */
0x00000316, 0x00000000, /* 00000000 //C 00316 db */
0x00000317, 0x0000003e, /* 0000003e //C 00317 db	62 */
0x00000318, 0x00000000, /* 00000000 //C 00318 db */
0x00000319, 0x00000020, /* 00000020 //C 00319 db	32 */
0x0000031a, 0x0000003b, /* 0000003b //C 0031a db	59 */
0x0000031b, 0x00000009, /* 00000009 //C 0031b db	9 */
0x0000031c, 0x0000000b, /* 0000000b //C 0031c db	11 */
0x0000031d, 0x0000002c, /* 0000002c //C 0031d db	44 */
0x0000031e, 0x0000003d, /* 0000003d //C 0031e db	61 */
0x0000031f, 0x0000005b, /* 0000005b //C 0031f db	91 */
0x00000320, 0x0000005d, /* 0000005d //C 00320 db	93 */
0x00000321, 0x00000000, /* 00000000 //C 00321 db */
0x00000322, 0x00000028, /* 00000028 //C 00322 db	40 */
0x00000323, 0x0000006e, /* 0000006e //C 00323 db	110 */
0x00000324, 0x00000075, /* 00000075 //C 00324 db	117 */
0x00000325, 0x0000006c, /* 0000006c //C 00325 db	108 */
0x00000326, 0x0000006c, /* 0000006c //C 00326 db	108 */
0x00000327, 0x00000029, /* 00000029 //C 00327 db	41 */
0x00000328, 0x00000000, /* 00000000 //C 00328 db */
0x00000329, 0x000000ba, /* 000000ba //C 00329 dd	cmd_m */
0x0000032a, 0x0000006d, /* 0000006d //C 0032a db	109 */
0x0000032b, 0x00000000, /* 00000000 //C 0032b db */
0x0000032c, 0x000000ba, /* 000000ba //C 0032c dd	cmd_m */
0x0000032d, 0x0000006d, /* 0000006d //C 0032d db	109 */
0x0000032e, 0x00000065, /* 00000065 //C 0032e db	101 */
0x0000032f, 0x0000006d, /* 0000006d //C 0032f db	109 */
0x00000330, 0x00000000, /* 00000000 //C 00330 db */
0x00000331, 0x0000010f, /* 0000010f //C 00331 dd	cmd_d */
0x00000332, 0x00000064, /* 00000064 //C 00332 db	100 */
0x00000333, 0x00000000, /* 00000000 //C 00333 db */
0x00000334, 0x0000010f, /* 0000010f //C 00334 dd	cmd_d */
0x00000335, 0x00000064, /* 00000064 //C 00335 db	100 */
0x00000336, 0x00000075, /* 00000075 //C 00336 db	117 */
0x00000337, 0x0000006d, /* 0000006d //C 00337 db	109 */
0x00000338, 0x00000070, /* 00000070 //C 00338 db	112 */
0x00000339, 0x00000000, /* 00000000 //C 00339 db */
0x0000033a, 0x00000142, /* 00000142 //C 0033a dd	cmd_e */
0x0000033b, 0x00000065, /* 00000065 //C 0033b db	101 */
0x0000033c, 0x00000000, /* 00000000 //C 0033c db */
0x0000033d, 0x00000144, /* 00000144 //C 0033d dd	cmd_l */
0x0000033e, 0x0000006c, /* 0000006c //C 0033e db	108 */
0x0000033f, 0x00000000, /* 00000000 //C 0033f db */
0x00000340, 0x00000144, /* 00000144 //C 00340 dd	cmd_l */
0x00000341, 0x0000006c, /* 0000006c //C 00341 db	108 */
0x00000342, 0x0000006f, /* 0000006f //C 00342 db	111 */
0x00000343, 0x00000061, /* 00000061 //C 00343 db	97 */
0x00000344, 0x00000064, /* 00000064 //C 00344 db	100 */
0x00000345, 0x00000000, /* 00000000 //C 00345 db */
0x00000346, 0x00000000, /* 00000000 //C 00346 dd	0 */
0x00000347, 0x00000000, /* 00000000 //C 00347 db	0 */
0x00000449, 0x00000045, /* 00000045 //C 00449 db	69 */
0x0000044a, 0x0000004f, /* 0000004f //C 0044a db	79 */
0x0000044b, 0x00000046, /* 00000046 //C 0044b db	70 */
0x0000044c, 0x00000020, /* 00000020 //C 0044c db	32 */
0x0000044d, 0x00000050, /* 00000050 //C 0044d db	80 */
0x0000044e, 0x0000004d, /* 0000004d //C 0044e db	77 */
0x0000044f, 0x0000006f, /* 0000006f //C 0044f db	111 */
0x00000450, 0x0000006e, /* 0000006e //C 00450 db	110 */
0x00000451, 0x00000069, /* 00000069 //C 00451 db	105 */
0x00000452, 0x00000074, /* 00000074 //C 00452 db	116 */
0x00000453, 0x0000006f, /* 0000006f //C 00453 db	111 */
0x00000454, 0x00000072, /* 00000072 //C 00454 db	114 */
0x00000455, 0x0000000a, /* 0000000a //C 00455 db	10 */
0x00000456, 0x00000000, /* 00000000 //C 00456 db */
0xffffffff, 0xffffffff
};
